@facts
bicycleEDB(redBike).
@rules

% Importing from external database predicates

 TI(S,P,O) :- TE(S,P,O).

% dead(human, humanLabel).
% deadCause(human, deadCause).
% deadCauseDoid(deadCause, doidLabel).

% doidDoidLabel(doid, label).
doidDoidLabel(S,O) :- TI(S,"<http://www.geneontology.org/formats/oboInOwl#id>",O).


disease(X) :- doidDoidLabel(X,Y).
diseaseHierarchy(S,O) :- TI(S,"<http://www.w3.org/2000/01/rdf-schema#subClassOf>",O), disease(S), disease(O).
diseaseHierarchy(X,Z) :- diseaseHierarchy(X,Y), diseaseHierarchy(Y,Z).

% Z is cancer
cancerDesease(Y) :- diseaseHierarchy(X,Y), doidDoidLabel(Y, "DOID:162").

DC(C) :- deadCause(X,Y), deadCauseDoid(Y,Z), doidDoidLabel(C,Z), cancerDesease(C).
DNC(C) :- deadCause(X,Y), deadCauseDoid(Y,Z), doidDoidLabel(C,Z), neg_cancerDesease(C).

% Existential rules
deadCause(X, Z) :- dead(X,Y).
